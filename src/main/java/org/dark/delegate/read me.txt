委託思想是基於觀察者模式而提出的。

其核心是將目標類的某個方法綁定到事件類。
事件處理者類相當於一個集合，所有綁定了各種目標類事件類統一存放於其中
通知者抽象類負責管理時間處理者類
具體通知者類負責真正觸發事件並將消息發送到事件處理者中的所有目標類


這種模式的好處就是：事件發送者（通知者）不再需要關注事件接受者（觀察者）的細節
甚至不需要知道有接受者的抽象的存在（說人話就是不需要對觀察者抽象接口）
事件類也不必關心什麼樣的類綁定到它的上面。它只負責通過反射機制調用目標類的目標方法即可。


也可能你覺得在過分靈活的背後，就是我們在調用兩個listener的方法的時候，需要知道這些方法的方法名、參數等等
在這裡，代碼的耦合度大大提高了。
當然，做任何事情都需要代價。
使用觀察者模式，我們可以通過預先知道觀察者們的接口，進而避免寫死觀察者的具體類的類名、方法名
但是這裡使用委託模式的時候，妳如何知道觀察者們的情況呢？所以寫死是必然的。